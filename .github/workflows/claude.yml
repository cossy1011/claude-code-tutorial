name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          allowed_tools: |
            [
              "View",
              "GlobTool", 
              "GrepTool",
              "Edit",
              "MultiEdit",
              "Write",
              "Bash(npm run build)",
              "Bash(npm run preview &)",
              "Bash(npm run test:e2e)",
              "Bash(npm ci)",
              "Bash(npx playwright screenshot --url http://localhost:4173 --path screenshot.png)",
              "Bash(npx playwright screenshot --url http://localhost:4173 --path mobile-screenshot.png --viewport 375x667)",
              "Bash(npx wait-on http://localhost:4173 --timeout 30000)",
              "Bash(pkill -f 'vite preview')",
              "Bash(git status)",
              "Bash(git diff)",
              "Bash(git log --oneline -5)",
              "Bash(base64 -i screenshot.png)",
              "Bash(base64 -i mobile-screenshot.png)",
              "Bash(ls -la *.png)"
            ]

